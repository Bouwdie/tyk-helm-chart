apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gateway-{{ include "tyk-pro.fullname" . }}
  labels:
    app: gateway-{{ include "tyk-pro.fullname" . }}
    chart: {{ include "tyk-pro.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  namespace: {{ .Values.nameSpace }}
spec:
  tolerations:
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
  selector:
    matchLabels:
      app: gateway-{{ include "tyk-pro.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: gateway-{{ include "tyk-pro.fullname" . }}
        release: {{ .Release.Name }}
    spec:
      minReadySeconds: 20
      strategy:
        # indicate which strategy we want for rolling update
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 2
          maxUnavailable: 1
      containers:
      - name: gateway-{{ .Chart.Name }}
        image: "{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag }}"
        imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
        env:
          - name: REDIGOCLUSTER_SHARDCOUNT
            value: "{{ .Values.redis.shardCount }}"
          - name: TYK_GW_STORAGE_HOSTS
            value: "{{ .Values.redis.host }}:{{ .Values.redis.port }}"
          - name: TYK_GW_STORAGE_USESSL
            value: "{{ .Values.redis.useSSL }}"
          - name: TYK_GW_DBAPPCONFOPTIONS_NODEISSEGMENTED
            value: "{{ .Values.enableSharding }}"
          - name: TYK_GW_DBAPPCONFOPTIONS_CONNECTIONSTRING
            value: "http://dashboard-svc-{{ include "tyk-pro.fullname" . }}.{{ .Values.nameSpace }}:{{ .Values.dash.service.port }}"
          - name: TYK_GW_POLICIES_POLICYCONNECTIONSTRING
            value: "http://dashboard-svc-{{ include "tyk-pro.fullname" . }}.{{ .Values.nameSpace }}:{{ .Values.dash.service.port }}"
          - name: TYK_GW_SECRET
            value: "{{ .Values.secrets.APISecret }}"
          - name: TYK_GW_NODESECRET
            value: "{{ .Values.secrets.APISecret }}"
          - name: TYK_GW_DBAPPCONFOPTIONS_TAGS
            value: "{{.Values.gateway.tags }}"
        command: ["/opt/tyk-gateway/tyk", "--conf=/etc/tyk-gateway/tyk.conf"]
        workingDir: /opt/tyk-gateway
        ports:
        - containerPort: 443
        resources:
{{ toYaml .Values.resources | indent 12 }}
        volumeMounts:
          - name: tyk-mgmt-gateway-conf
            mountPath: /etc/tyk-gateway
          - name: {{ .Release.Name }}-default-cert
            mountPath: /etc/certs
      volumes:
        - name: tyk-mgmt-gateway-conf
          configMap:
            name: tyk-mgmt-gateway-conf
            items:
              - key: tyk_mgmt.conf
                path: tyk.conf
        - name: {{ .Release.Name }}-default-cert
          secret:
            secretName: {{ .Release.Name }}-default-cert
